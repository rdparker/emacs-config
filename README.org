#+TITLE: Ron Parker's Emacs Configuration

This is the configuration I use on all of my machines, Linux, Mac and
Windows.  I am deeply indebted to [[https://github.com/jwiegley][John Wiegley]] for many of his Emacs
innovations including [[https://github.com/jwiegley/use-package][use-package]].  This has allowed me to delay load
most of my configuration.  On a good workstation it comes up in a few
seconds.  On a slow, shared system or Windows it can take a minute
or more.

If you decide to play with this, do what I did when I started
investigating [[https://github.com/jwiegley/dot-emacs][John's Emacs configuration]].  Move your Emacs init file
and =~/.emacs.d= directory aside and then clone the repository into
=~/.emacs.d=.  In my case, I actually pulled his config into a
[[https://github.com/rdparker/emacs-config/tree/topic/try-johnw][topic/try-johnw]] branch within my repository.  I switched to that
branch and then tweaked and played until I understood which bits I
wanted.  If you grab his config, be warned that his =settings.el= file
has some things that are very specific to his environment.  I have
tried to keep my user-specific settings to a minimum.

* Usage

When I need to use Emacs on a new system I always

: cd
: git clone https://github.com/rdparker/emacs-config.git .emacs.d
: cd .emacs.d
: make

This clones the Emacs configuration, pulls in some libraries and
packages as submodules and sets up remotes for others that are stored
in this repository as subtrees.

* Features

  + Delay loads and configures most packages using John Wiegley's
    =use-package=.

  + Advises =desktop-mode= so that buffers show up in the list before
    they have actually been loaded.  5 buffers will be loaded
    immediately and the rest will be lazily loaded when the system
    is idle.

  + Supports a =~/.emacs.d/non-public/init.el= file for sensitive
    configuration options.  It is omitted by =.gitignore= and will
    never be committed to a repository.

  + The =use-repo-package= macro permits using ELPA, MELPA and
    Marmalade packages on systems that cannot access the Internet.

    This is done by creating an Emacs-version-specific directory for
    the package manager.  The version-specific files are then
    committed to the git repository so that they are available across
    all machines.

    The version-specific directory may be created for a new version of
    Emacs by doing =M-x package-initialize=.  Then, if you exit and
    restart emacs the =use-repo-package= macro will pull in all of
    these new packages.  Once that is done =git add= the new
    =elpa-XX.Y.Z= directory and commit the changes to the repository.

    It may seem odd to check these directories into git, but it makes
    the files available for when I check them out on a system with a
    newer version of Emacs and =scp= the entire =.emacs.d= directory
    to machines with restricted access, which typically are running
    older versions.

* Mis-features

  + Parts of this are still legacy and do not use use-package or are
    retained as git submodules.

  + Things are still slow starting up on Windows.

  + A better offline ELPA solution would be nice.
* Subtrees and Subodules

This emacs configuration uses both git subtrees and submodules. Except
for submodules from my own repositories, they should all be considered
legacy. I will be replacing all of them over time.

** Why?

Using submodules has become problematic, I've run into the all too
common issue of having to deal with disappearing git remotes and
revisions due to authors deleting them in one fashion or another. So,
bye bye submodules. Hello subtrees.

Committing back upstream with a subtree is a little more complicated,
but I don't do it very often and at least any revisions in this
configuration will always be available since subtrees are stored
directly within this repo.

Because I normally squash subtrees to keep the size of this repo down,
the original author's history is not directly available, but this has
rarely been an issue. You really don't want me to pull in the full
history of [[http://orgmode.org][Org-mode]].

Subtrees use extra git remotes and since these are normally local to
the machine where they are created, I am maintaining a list of them in
the =Makefile=. This makes it easier to know where they came from and
to do upstream commits from any machine where this configuration is
used. Sure, adding them to the =Makefile= is manual, but it beats
losing track of that information or losing part of my configuration
because something has disappeared.
